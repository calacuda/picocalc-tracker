[package]
name = "picocalc-dungeon"
version = "0.1.0"
edition = "2024"

[dependencies]
cortex-m = "0.7"
cortex-m-rt = "0.7.5"
critical-section = "1.2.0"
defmt = { version = "0.3", features = ["encoding-rzcobs"] }
defmt-brtt = { version = "0.1", default-features = false, features = ["rtt"] }
libm = "0.2.15"
panic-probe = { version = "0.3", features = ["print-defmt"] }
pio = "0.3.0"
pio-proc = "0.3.0"
rp235x-hal = { version = "0.3.0", features = ["binary-info", "critical-section-impl", "rt", "defmt"] }
fugit = "0.3.6"
heapless = "0.8.0"
rp-binary-info = "0.1.1"
panic-halt = "1.0.0"
embedded-hal = { version = "1.0.0" }
embedded-alloc = "0.6.0"
embedded-graphics = { version = "0.8", features = ["defmt"] }
portable-atomic = { version = "1.9.0", features = ["critical-section"] }
# bevy = { version = "0.16", default-features = false, features = [ "critical-section", "default_no_std" ] }
defmt-rtt = "1.0.0"
tinytga = "0.5.0"
nalgebra = {version = "0.32.3", default-features = false, features = [ "libm" ] }
embedded-sdmmc = "0.9.0"
embedded-hal-bus = { version = "0.3.0", features = ["portable-atomic", "alloc"] }
# picocalc-bevy = { git = "https://github.com/calacuda/picocalc-bevy-test", version = "0.1.0", package = "picocalc-bevy-test" }
rand = { version = "0.9.1", default-features = false, features = ["alloc", "nightly", "small_rng"] }
# dlopen = "0.1"

[dependencies.embedded-gfx]
git = "https://github.com/calacuda/embedded-gfx"

[dependencies.display-interface-spi]
git = "https://github.com/chrismoos/display-interface"
branch = "rw-interface"

[target.'cfg( target_arch = "arm" )'.dependencies]
embassy-executor = {version = "0.5", features = ["arch-cortex-m", "executor-thread"]}

# cargo build/run
[profile.dev]
codegen-units = 1
debug = 2
debug-assertions = true # <-
incremental = false
opt-level = "s" # <-
overflow-checks = true # <-

# cargo test
[profile.test]
codegen-units = 1
debug = 2
debug-assertions = true # <-
incremental = false
opt-level = "s" # <-
overflow-checks = true # <-

# cargo build/run --release
[profile.release]
codegen-units = 1
debug = 2
debug-assertions = false # <-
incremental = false
lto = 'fat'
opt-level = "s" # <-
overflow-checks = false # <-

# cargo test --release
[profile.bench]
codegen-units = 1
debug = 2
debug-assertions = false # <-
incremental = false
lto = 'fat'
opt-level = "s" # <-
overflow-checks = false
